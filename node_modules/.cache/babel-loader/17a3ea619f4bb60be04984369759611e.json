{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _mergeClassNames = require('merge-class-names');\n\nvar _mergeClassNames2 = _interopRequireDefault(_mergeClassNames);\n\nvar _LinkService = require('./LinkService');\n\nvar _LinkService2 = _interopRequireDefault(_LinkService);\n\nvar _utils = require('./shared/utils');\n\nvar _events = require('./shared/events');\n\nvar _propTypes3 = require('./shared/propTypes');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Document = function (_Component) {\n  (0, _inherits3.default)(Document, _Component);\n\n  function Document() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Document);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Document.__proto__ || (0, _getPrototypeOf2.default)(Document)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      pdf: null\n    }, _this.viewer = {\n      scrollPageIntoView: function scrollPageIntoView(_ref2) {\n        var pageNumber = _ref2.pageNumber; // Handling jumping to internal links target\n        // First, check if custom handling of onItemClick was provided\n\n        if (_this.props.onItemClick) {\n          _this.props.onItemClick({\n            pageNumber: pageNumber\n          });\n\n          return;\n        } // If not, try to look for target page within the <Document>.\n\n\n        var page = _this.pages[pageNumber - 1];\n\n        if (page) {\n          // Scroll to the page automatically\n          page.scrollIntoView();\n          return;\n        }\n\n        (0, _utils.warnOnDev)('Warning: An internal link leading to page ' + pageNumber + ' was clicked, but neither <Document> was provided with onItemClick nor it was able to find the page within itself. Either provide onItemClick to <Document> and handle navigating by yourself or ensure that all pages are rendered within <Document>.');\n      }\n    }, _this.linkService = new _LinkService2.default(), _this.onSourceSuccess = function (source) {\n      (0, _utils.callIfDefined)(_this.props.onSourceSuccess);\n\n      if (!PDFJS) {\n        throw new Error('Could not load the document. PDF.js is not loaded.');\n      }\n\n      if (!source) {\n        return null;\n      }\n\n      _this.runningTask = (0, _utils.makeCancellable)(PDFJS.getDocument(source));\n      return _this.runningTask.promise.then(_this.onLoadSuccess).catch(_this.onLoadError);\n    }, _this.onSourceError = function (error) {\n      if (error.name === 'RenderingCancelledException' || error.name === 'PromiseCancelledException') {\n        return;\n      }\n\n      (0, _utils.errorOnDev)(error.message, error);\n      (0, _utils.callIfDefined)(_this.props.onSourceError, error);\n\n      _this.setState({\n        pdf: false\n      });\n    }, _this.onLoadSuccess = function (pdf) {\n      _this.setState({\n        pdf: pdf\n      }, function () {\n        (0, _utils.callIfDefined)(_this.props.onLoadSuccess, pdf);\n        _this.pages = new Array(pdf.numPages);\n\n        _this.linkService.setDocument(pdf);\n      });\n    }, _this.onLoadError = function (error) {\n      if (error.name === 'RenderingCancelledException' || error.name === 'PromiseCancelledException') {\n        return;\n      }\n\n      (0, _utils.errorOnDev)(error.message, error);\n      (0, _utils.callIfDefined)(_this.props.onLoadError, error);\n\n      _this.setState({\n        pdf: false\n      });\n    }, _this.findDocumentSource = function () {\n      var file = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props.file;\n      return new _promise2.default(function (resolve, reject) {\n        if (!file) {\n          return resolve(null);\n        } // File is a string\n\n\n        if ((0, _utils.isString)(file)) {\n          if ((0, _utils.isDataURI)(file)) {\n            var fileUint8Array = (0, _utils.dataURItoUint8Array)(file);\n            return resolve(fileUint8Array);\n          }\n\n          (0, _utils.displayCORSWarning)();\n          return resolve(file);\n        }\n\n        if ((0, _utils.isArrayBuffer)(file)) {\n          return resolve(file);\n        }\n\n        if ((0, _utils.isParamObject)(file)) {\n          // Prevent from modifying props\n          var modifiedFile = (0, _assign2.default)({}, file);\n\n          if ('url' in modifiedFile) {\n            // File is data URI\n            if ((0, _utils.isDataURI)(modifiedFile.url)) {\n              var _fileUint8Array = (0, _utils.dataURItoUint8Array)(modifiedFile.url);\n\n              return resolve(_fileUint8Array);\n            }\n\n            (0, _utils.displayCORSWarning)();\n          }\n\n          return resolve(modifiedFile);\n        }\n        /**\n         * The cases below are browser-only.\n         * If you're running on a non-browser environment, these cases will be of no use.\n         */\n\n\n        if (_utils.isBrowser) {\n          // File is a Blob\n          if ((0, _utils.isBlob)(file) || (0, _utils.isFile)(file)) {\n            var reader = new FileReader();\n\n            reader.onload = function () {\n              return resolve(new Uint8Array(reader.result));\n            };\n\n            reader.onerror = function (event) {\n              switch (event.target.error.code) {\n                case event.target.error.NOT_FOUND_ERR:\n                  return reject(new Error('Error while reading a file: File not found.'));\n\n                case event.target.error.NOT_READABLE_ERR:\n                  return reject(new Error('Error while reading a file: File not readable.'));\n\n                case event.target.error.SECURITY_ERR:\n                  return reject(new Error('Error while reading a file: Security error.'));\n\n                case event.target.error.ABORT_ERR:\n                  return reject(new Error('Error while reading a file: Aborted.'));\n\n                default:\n                  return reject(new Error('Error while reading a file.'));\n              }\n            };\n\n            reader.readAsArrayBuffer(file);\n            return null;\n          }\n        } // No supported loading method worked\n\n\n        return reject(new Error('Unsupported loading method.'));\n      });\n    }, _this.registerPage = function (pageIndex, ref) {\n      _this.pages[pageIndex] = ref;\n    }, _this.unregisterPage = function (pageIndex) {\n      delete _this.pages[pageIndex];\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Document, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.loadDocument();\n      this.linkService.setViewer(this.viewer);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.shouldLoadDocument(nextProps)) {\n        if (this.state.pdf !== null) {\n          this.setState({\n            pdf: null\n          });\n        }\n\n        this.loadDocument(nextProps);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      (0, _utils.cancelRunningTask)(this.runningTask);\n    }\n  }, {\n    key: 'getChildContext',\n    value: function getChildContext() {\n      var linkService = this.linkService,\n          registerPage = this.registerPage,\n          unregisterPage = this.unregisterPage;\n      var rotate = this.props.rotate;\n      return {\n        linkService: linkService,\n        pdf: this.state.pdf,\n        registerPage: registerPage,\n        rotate: rotate,\n        unregisterPage: unregisterPage\n      };\n    }\n  }, {\n    key: 'shouldLoadDocument',\n    value: function shouldLoadDocument(nextProps) {\n      var nextFile = nextProps.file;\n      var file = this.props.file; // We got file of different type - clearly there was a change\n\n      if ((typeof nextFile === 'undefined' ? 'undefined' : (0, _typeof3.default)(nextFile)) !== (typeof file === 'undefined' ? 'undefined' : (0, _typeof3.default)(file))) {\n        return true;\n      } // We got an object and previously it was an object too - we need to compare deeply\n\n\n      if ((0, _utils.isParamObject)(nextFile) && (0, _utils.isParamObject)(file)) {\n        return nextFile.data !== file.data || nextFile.range !== file.range || nextFile.url !== file.url; // We either have or had an object - most likely there was a change\n      } else if ((0, _utils.isParamObject)(nextFile) || (0, _utils.isParamObject)(file)) {\n        return true;\n      }\n      /**\n       * The cases below are browser-only.\n       * If you're running on a non-browser environment, these cases will be of no use.\n       */\n\n\n      if (_utils.isBrowser && ( // File is a Blob or a File\n      (0, _utils.isBlob)(nextFile) || (0, _utils.isFile)(nextFile)) && ((0, _utils.isBlob)(file) || (0, _utils.isFile)(file))) {\n        /**\n         * Theoretically, we could compare files here by reading them, but that would severely affect\n         * performance. Therefore, we're making a compromise here, agreeing on not loading the next\n         * file if its size is identical as the previous one's.\n         */\n        return nextFile.size !== file.size;\n      }\n\n      return nextFile !== file;\n    }\n  }, {\n    key: 'loadDocument',\n    value: function loadDocument() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      (0, _utils.cancelRunningTask)(this.runningTask);\n      this.runningTask = (0, _utils.makeCancellable)(this.findDocumentSource(props.file));\n      return this.runningTask.promise.then(this.onSourceSuccess).catch(this.onSourceError);\n    }\n    /**\n     * Attempts to find a document source based on props.\n     */\n\n  }, {\n    key: 'renderNoData',\n    value: function renderNoData() {\n      return _react2.default.createElement('div', {\n        className: 'react-pdf__message react-pdf__message--no-data'\n      }, this.props.noData);\n    }\n  }, {\n    key: 'renderError',\n    value: function renderError() {\n      return _react2.default.createElement('div', {\n        className: 'react-pdf__message react-pdf__message--error'\n      }, this.props.error);\n    }\n  }, {\n    key: 'renderLoader',\n    value: function renderLoader() {\n      return _react2.default.createElement('div', {\n        className: 'react-pdf__message react-pdf__message--loading'\n      }, this.props.loading);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          className = _props.className,\n          file = _props.file,\n          inputRef = _props.inputRef;\n      var pdf = this.state.pdf;\n      var content = void 0;\n\n      if (!file) {\n        content = this.renderNoData();\n      } else if (pdf === null) {\n        content = this.renderLoader();\n      } else if (pdf === false) {\n        content = this.renderError();\n      } else {\n        content = this.props.children;\n      }\n\n      return _react2.default.createElement('div', (0, _extends3.default)({\n        className: (0, _mergeClassNames2.default)('react-pdf__Document', className),\n        ref: inputRef\n      }, this.eventProps), content);\n    }\n  }, {\n    key: 'eventProps',\n    get: function get() {\n      var _this2 = this;\n\n      return (0, _events.makeEventProps)(this.props, function () {\n        return _this2.state.pdf;\n      });\n    }\n    /**\n     * Called when a document source is resolved correctly\n     */\n\n    /**\n     * Called when a document source failed to be resolved correctly\n     */\n\n    /**\n     * Called when a document is read successfully\n     */\n\n    /**\n     * Called when a document failed to read successfully\n     */\n\n  }]);\n  return Document;\n}(_react.Component);\n/**\n * Loads a PDF document. Passes it to all children.\n */\n\n\nexports.default = Document;\nDocument.childContextTypes = {\n  linkService: _propTypes3.isLinkService,\n  pdf: _propTypes3.isPdf,\n  registerPage: _propTypes2.default.func,\n  rotate: _propTypes2.default.number,\n  unregisterPage: _propTypes2.default.func\n};\nDocument.defaultProps = {\n  error: 'Failed to load PDF file.',\n  loading: 'Loading PDF…',\n  noData: 'No PDF file specified.'\n};\nDocument.propTypes = (0, _extends3.default)({\n  children: _propTypes2.default.node,\n  className: _propTypes3.isClassName,\n  error: _propTypes2.default.node,\n  file: _utils.isFile,\n  inputRef: _propTypes2.default.func,\n  loading: _propTypes2.default.node,\n  noData: _propTypes2.default.node,\n  onItemClick: _propTypes2.default.func,\n  onLoadError: _propTypes2.default.func,\n  onLoadSuccess: _propTypes2.default.func,\n  onSourceError: _propTypes2.default.func,\n  onSourceSuccess: _propTypes2.default.func,\n  rotate: _propTypes2.default.number\n}, (0, _propTypes3.eventsProps)());","map":null,"metadata":{},"sourceType":"script"}