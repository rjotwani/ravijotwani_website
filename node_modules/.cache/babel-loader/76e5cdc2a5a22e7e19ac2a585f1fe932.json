{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _mergeClassNames = require('merge-class-names');\n\nvar _mergeClassNames2 = _interopRequireDefault(_mergeClassNames);\n\nvar _OutlineItem = require('./OutlineItem');\n\nvar _OutlineItem2 = _interopRequireDefault(_OutlineItem);\n\nvar _utils = require('./shared/utils');\n\nvar _events = require('./shared/events');\n\nvar _propTypes3 = require('./shared/propTypes');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Outline = function (_Component) {\n  (0, _inherits3.default)(Outline, _Component);\n\n  function Outline() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Outline);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Outline.__proto__ || (0, _getPrototypeOf2.default)(Outline)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      outline: null\n    }, _this.onLoadSuccess = function (outline) {\n      _this.setState({\n        outline: outline\n      }, function () {\n        (0, _utils.callIfDefined)(_this.props.onLoadSuccess, outline);\n      });\n    }, _this.onLoadError = function (error) {\n      if (error.name === 'RenderingCancelledException' || error.name === 'PromiseCancelledException') {\n        return;\n      }\n\n      (0, _utils.errorOnDev)(error.message, error);\n      (0, _utils.callIfDefined)(_this.props.onLoadError, error);\n\n      _this.setState({\n        outline: false\n      });\n    }, _this.onItemClick = function (_ref2) {\n      var pageIndex = _ref2.pageIndex,\n          pageNumber = _ref2.pageNumber;\n      (0, _utils.callIfDefined)(_this.props.onItemClick, {\n        pageIndex: pageIndex,\n        pageNumber: pageNumber\n      });\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Outline, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.loadOutline();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      if (this.getPdf(nextProps, nextContext) !== this.getPdf()) {\n        this.loadOutline(nextProps, nextContext);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      (0, _utils.cancelRunningTask)(this.runningTask);\n    }\n  }, {\n    key: 'getPdf',\n    value: function getPdf() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.context;\n      return props.pdf || context.pdf;\n    }\n  }, {\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        pdf: this.getPdf(),\n        onClick: this.onItemClick\n      };\n    }\n  }, {\n    key: 'loadOutline',\n    value: function loadOutline() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.context;\n      var pdf = this.getPdf(props, context);\n\n      if (!pdf) {\n        throw new Error('Attempted to load an outline, but no document was specified.');\n      }\n\n      if (this.state.outline !== null) {\n        this.setState({\n          outline: null\n        });\n      }\n\n      this.runningTask = (0, _utils.makeCancellable)(pdf.getOutline());\n      return this.runningTask.promise.then(this.onLoadSuccess).catch(this.onLoadError);\n    }\n  }, {\n    key: 'renderOutline',\n    value: function renderOutline() {\n      var outline = this.state.outline;\n      return _react2.default.createElement('ul', null, outline.map(function (item, itemIndex) {\n        return _react2.default.createElement(_OutlineItem2.default, {\n          key: typeof item.destination === 'string' ? item.destination : itemIndex,\n          item: item\n        });\n      }));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var pdf = this.getPdf();\n      var outline = this.state.outline;\n\n      if (!pdf || !outline) {\n        return null;\n      }\n\n      var className = this.props.className;\n      return _react2.default.createElement('div', (0, _extends3.default)({\n        className: (0, _mergeClassNames2.default)('react-pdf__Outline', className),\n        ref: this.props.inputRef\n      }, this.eventProps), this.renderOutline());\n    }\n  }, {\n    key: 'eventProps',\n    get: function get() {\n      var _this2 = this;\n\n      return (0, _events.makeEventProps)(this.props, function () {\n        return _this2.state.outline;\n      });\n    }\n    /**\n     * Called when an outline is read successfully\n     */\n\n    /**\n     * Called when an outline failed to read successfully\n     */\n\n  }]);\n  return Outline;\n}(_react.Component);\n\nexports.default = Outline;\nOutline.childContextTypes = {\n  onClick: _propTypes2.default.func,\n  pdf: _propTypes3.isPdf\n};\nOutline.contextTypes = {\n  pdf: _propTypes3.isPdf\n};\nOutline.propTypes = (0, _extends3.default)({\n  className: _propTypes3.isClassName,\n  inputRef: _propTypes2.default.func,\n  onItemClick: _propTypes2.default.func,\n  onLoadError: _propTypes2.default.func,\n  onLoadSuccess: _propTypes2.default.func\n}, (0, _propTypes3.eventsProps)());","map":null,"metadata":{},"sourceType":"script"}