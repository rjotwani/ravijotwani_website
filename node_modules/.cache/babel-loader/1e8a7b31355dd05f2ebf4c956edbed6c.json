{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _utils = require('../shared/utils');\n\nvar _propTypes3 = require('../shared/propTypes');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar AnnotationLayer = function (_Component) {\n  (0, _inherits3.default)(AnnotationLayer, _Component);\n\n  function AnnotationLayer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, AnnotationLayer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = AnnotationLayer.__proto__ || (0, _getPrototypeOf2.default)(AnnotationLayer)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      annotations: null\n    }, _this.onGetAnnotationsSuccess = function (annotations) {\n      (0, _utils.callIfDefined)(_this.context.onGetAnnotationsSuccess, annotations);\n\n      _this.setState({\n        annotations: annotations\n      });\n    }, _this.onGetAnnotationsError = function (error) {\n      if (error.name === 'RenderingCancelledException' || error.name === 'PromiseCancelledException') {\n        return;\n      }\n\n      (0, _utils.errorOnDev)(error.message, error);\n      (0, _utils.callIfDefined)(_this.context.onGetAnnotationsError, error);\n\n      _this.setState({\n        annotations: false\n      });\n    }, _this.onRenderSuccess = function () {\n      (0, _utils.callIfDefined)(_this.context.onRenderAnnotationsSuccess);\n    }, _this.onRenderError = function (error) {\n      if (error.name === 'RenderingCancelledException' || error.name === 'PromiseCancelledException') {\n        return;\n      }\n\n      (0, _utils.errorOnDev)(error.message, error);\n      (0, _utils.callIfDefined)(_this.context.onRenderError, error);\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(AnnotationLayer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.getAnnotations();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      if (nextContext.page !== this.context.page) {\n        if (this.state.annotations !== null) {\n          this.setState({\n            annotations: null\n          });\n        }\n\n        this.getAnnotations(nextContext);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      (0, _utils.cancelRunningTask)(this.runningTask);\n    }\n    /**\n     * Called when a annotations fails to render.\n     */\n\n  }, {\n    key: 'getAnnotations',\n    value: function getAnnotations() {\n      var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.context;\n      var page = context.page;\n\n      if (!page) {\n        throw new Error('Attempted to load page annotations, but no page was specified.');\n      }\n\n      this.runningTask = (0, _utils.makeCancellable)(page.getAnnotations());\n      return this.runningTask.promise.then(this.onGetAnnotationsSuccess).catch(this.onGetAnnotationsError);\n    }\n  }, {\n    key: 'renderAnnotations',\n    value: function renderAnnotations() {\n      var annotations = this.state.annotations;\n\n      if (!annotations) {\n        return;\n      }\n\n      var _context = this.context,\n          linkService = _context.linkService,\n          page = _context.page;\n      var viewport = this.viewport.clone({\n        dontFlip: true\n      });\n      var parameters = {\n        annotations: annotations,\n        div: this.annotationLayer,\n        linkService: linkService,\n        page: page,\n        viewport: viewport\n      };\n\n      try {\n        PDFJS.AnnotationLayer.render(parameters);\n        this.onRenderSuccess();\n      } catch (error) {\n        this.onRenderError(error);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      return _react2.default.createElement('div', {\n        className: 'react-pdf__Page__annotations annotationLayer',\n        ref: function ref(_ref2) {\n          _this2.annotationLayer = _ref2;\n        }\n      }, this.renderAnnotations());\n    }\n  }, {\n    key: 'viewport',\n    get: function get() {\n      var _context2 = this.context,\n          page = _context2.page,\n          rotate = _context2.rotate,\n          scale = _context2.scale;\n      return page.getViewport(scale, rotate);\n    }\n  }]);\n  return AnnotationLayer;\n}(_react.Component);\n\nexports.default = AnnotationLayer;\nAnnotationLayer.contextTypes = {\n  linkService: _propTypes3.isLinkService,\n  onGetAnnotationsError: _propTypes2.default.func,\n  onGetAnnotationsSuccess: _propTypes2.default.func,\n  onRenderAnnotationsError: _propTypes2.default.func,\n  onRenderAnnotationsSuccess: _propTypes2.default.func,\n  page: _propTypes3.isPage,\n  rotate: _propTypes3.isRotate,\n  scale: _propTypes2.default.number\n};","map":null,"metadata":{},"sourceType":"script"}