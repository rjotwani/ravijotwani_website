{"version":3,"sources":["tileData.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["tileData","img","title","href","TabContainer","props","react_default","a","createElement","Typography_default","component","style","padding","children","LinkTab","Tab_default","Object","assign","onClick","event","preventDefault","library","add","faEnvelope","faFileAlt","faLinkedin","faGithub","App","state","value","handleChange","_this","setState","classes","this","className","root","AppBar_default","position","Tabs_default","onChange","centered","tabsRoot","indicator","tabsIndicator","tabRoot","selected","tabSelected","label","id","Card_default","card","CardMedia_default","media","image","CardContent_default","gutterBottom","variant","target","projectsCard","GridList_default","gridList","cols","map","tile","GridListTile_default","key","src","alt","GridListTileBar_default","actionIcon","IconButton_default","icon","Info_default","linkCard","Grid_default","container","justify","Button_default","button","react_fontawesome_index_es","color","Component","withStyles","theme","flexGrow","backgroundColor","palette","background","paper","borderBottom","textTransform","width","fontWeight","typography","fontWeightRegular","fontFamily","join","&:hover","opacity","&$tabSelected","fontWeightMedium","&:focus","spacing","unit","margin","maxWidth","height","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.39d73867.chunk.js","sourcesContent":["const tileData = [\n  {\n    img: './images/bids.png',\n    title: 'Bids Events',\n    href: 'https://bidsevents.com/',\n  },\n  {\n    img: './images/radus.png',\n    title: 'Radus',\n    href: 'https://drive.google.com/drive/folders/0B0TGJQcWbj3dVlRGSkRubkFLVGc?usp=sharing',\n  },\n  {\n    img: './images/bab.png',\n    title: 'Blockchain at Berkeley',\n    href: 'https://blockchainatberkeley.blog/state-of-the-ledger-2018-c9cf767ee399',\n  },\n  {\n    img: './images/dropmail.png',\n    title: '[Deprecated] DropMail',\n    href: 'https://www.youtube.com/watch?v=rxSjNYNlBY8',\n  },\n  {\n    img: './images/vitalik.jpg',\n    title: 'Meeting Vitalik Buterin',\n    href: 'https://blockchainatberkeley.blog/first-impressions-at-an-sf-blockchain-event-2949673adfda',\n  },\n  {\n    img: './images/cash.png',\n    title: 'Radus Analysis',\n    href: 'https://blockchainatberkeley.blog/radus-an-optimized-crowdsale-model-72515383b153',\n  },\n  {\n    img: './images/bitcoin.png',\n    title: 'Bitcoin Mining',\n    href: 'https://www.academia.edu/28754236/Bitcoin_Mining_for_Dummies',\n  },\n  {\n    img: './images/flood.png',\n    title: 'The India Floods',\n    href: './files/journal.pdf',\n  },\n  {\n    img: './images/music.png',\n    title: 'Playlist',\n    href: 'https://itunes.apple.com/us/playlist//pl.8c0f9ed509de44f991d58737aae423e1',\n  },\n];\n\nexport default tileData;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport MailIcon from '@material-ui/icons/Mail';\nimport tileData from './tileData';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelope, faFileAlt } from '@fortawesome/free-regular-svg-icons'\nimport { faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons'\n\nlibrary.add(faEnvelope, faFileAlt, faLinkedin, faGithub)\n\nfunction TabContainer(props) {\n  return (\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n      {props.children}\n    </Typography>\n  );\n}\n\n// TabContainer.propTypes = {\n//   children: PropTypes.node.isRequired,\n// };\n\nfunction LinkTab(props) {\n  return <Tab component=\"a\" onClick={event => event.preventDefault()} {...props} />;\n}\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  tabsRoot: {\n    borderBottom: '1px solid #e8e8e8',\n    backgroundColor: theme.palette.background.paper,\n  },\n  tabsIndicator: {\n    backgroundColor: '#1890ff',\n  },\n  tabRoot: {\n    color: '#1890ff',\n    textTransform: 'initial',\n    width: 'auto',\n    fontWeight: theme.typography.fontWeightRegular,\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:hover': {\n      color: '#40a9ff',\n      opacity: 1,\n    },\n    '&$tabSelected': {\n      color: '#1890ff',\n      fontWeight: theme.typography.fontWeightMedium,\n    },\n    '&:focus': {\n      color: '#40a9ff',\n    },\n  },\n  tabSelected: {},\n  typography: {\n    padding: theme.spacing.unit * 3,\n  },\n  card: {\n    margin: 'auto',\n    maxWidth: 600,\n  },\n  projectsCard: {\n    margin: 'auto',\n    maxWidth: 800,\n  },\n  linkCard: {\n    margin: 'auto',\n    maxWidth: 400,\n  },\n  media: {\n    height: theme.spacing.unit * 30,\n  },\n  gridList: {\n    margin: theme.spacing.unit * 4,\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n  button: {\n    fontSize: 40,\n  },\n});\n\nclass App extends Component {\n\n  state = {\n    value: 0,\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  render() {\n\n    const { classes } = this.props;\n    const { value } = this.state;\n\n    return (\n        <div className={classes.root}>\n          <AppBar position=\"static\">\n            <Tabs value={value} onChange={this.handleChange} centered classes={{ root: classes.tabsRoot, indicator: classes.tabsIndicator }}>\n              <LinkTab classes={{ root: classes.tabRoot, selected: classes.tabSelected }} label=\"Home\" href=\"home\" />\n              <LinkTab classes={{ root: classes.tabRoot, selected: classes.tabSelected }} label=\"Projects\" href=\"projects\" id=\"projectsTab\" />\n              <LinkTab classes={{ root: classes.tabRoot, selected: classes.tabSelected }} label=\"Links\" href=\"links\" />\n            </Tabs>\n          </AppBar>\n\n          {value === 0 && <TabContainer>\n            <Card className={classes.card}>\n              <CardMedia\n                className={classes.media}\n                image=\"./images/ravi.jpg\"\n                title=\"Ravi\"\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h1\">\n                  Hi, I&apos;m Ravi.\n                </Typography>\n                <Typography component=\"p\">\n                  I&apos;m a 19-year-old Computer Science student at UC Berkeley. As a full-stack\n                  developer, I&apos;ve created multiple cool projects and worked for companies like\n                  SpaceX and BMW.\n                  <br/><br/>\n                  I&apos;m absolutely fascinated by cybersecurity, distributed networks, and computer vision.\n                  Right now, I&apos;m working on my latest venture, <a href=\"https://bidsevents.com\" target=\"_blank\">Bids Events</a>.\n                  My cofounders and I made it to the final round for YCombinator&apos;s w19 batch, received HotDesk space\n                  at Berkeley&apos;s Skydeck, and are currently alpha testing our mobile application.\n                  <br/><br/>\n                  I&apos;ve created tons of educational content, ghostwritten technical whitepapers for various companies,\n                  and delivered presentations to executives twice my age. Companies I&apos;ve started in\n                  the past have gone through YCombinator&apos;s Startup School and served thousands of users.\n                  Unfortunately, a lot of the work I&apos;ve done is confidential, but feel free to\n                  check out some of the projects for which I can disclose details in the <a href=\"javascript:document.getElementById('projectsTab').click()\">\n                  Projects</a> tab.\n                  <br/><br/>\n                  I love getting to know new people, so feel free to schedule a meeting with me <a href=\"https://rjotwani.youcanbook.me/\" target=\"_blank\">\n                  here</a>.\n                </Typography>\n              </CardContent>\n            </Card>\n          </TabContainer>}\n\n          {value === 1 && <TabContainer>\n            <Card centered className={classes.projectsCard} >\n              <CardContent>\n                <Typography component=\"p\">\n                  As a developer, designer, and entrepreneur, I have a large assortment of past projects.\n                  I aim to apply intelligence and creativity to everything I do, so feel free to take a\n                  look at my most noteworthy ventures listed below.\n                </Typography>\n              </CardContent>\n              <CardContent>\n                <GridList className={classes.gridList} cols={3}>\n                  {tileData.map(tile => (\n                    <GridListTile key={tile.img} cols={tile.cols || 1}>\n                      <img src={tile.img} alt={tile.title} />\n                      <GridListTileBar\n                        title={tile.title}\n                        actionIcon={(tile.href &&\n                          <IconButton className={classes.icon} href={tile.href} target='_blank'>\n                            <InfoIcon />\n                          </IconButton>) || null\n                        }\n                      />\n                    </GridListTile>\n                  ))}\n                </GridList>\n              </CardContent>\n            </Card>\n          </TabContainer>}\n\n          {value === 2 && <TabContainer>\n            <Card centered className={classes.linkCard} >\n              <Grid container justify = \"center\">\n                <Button className={classes.button} href='mailto:rjotwani@berkeley.edu' target='_blank' >\n                  <FontAwesomeIcon icon={['far', 'envelope']} color='#dd4b39' />\n                </Button>\n                <Button className={classes.button} href='https://www.linkedin.com/in/ravijotwani/' target='_blank' >\n                  <FontAwesomeIcon icon={['fab', 'linkedin']} color='#0077B5' />\n                </Button>\n                <Button className={classes.button} href='https://github.com/rjotwani/' target='_blank' >\n                  <FontAwesomeIcon icon={['fab', 'github']} color='#333' />\n                </Button>\n                <Button className={classes.button} href='./files/resume.pdf' target='_blank' >\n                  <FontAwesomeIcon icon={['far', 'file-alt']} color='#a1a0a5' />\n                </Button>\n              </Grid>\n            </Card>\n          </TabContainer>}\n\n        </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}